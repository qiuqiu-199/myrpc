#表示根记录器的日志级别为INFO，同时会将日志输出到控制台（console）和文件（file）
log4j.rootLogger=INFO,console,file

#配置控制台（console）的日志输出器，使用org.apache.log4j.ConsoleAppender
log4j.appender.console=org.apache.log4j.ConsoleAppender
#指定了控制台输出的目标，这里是系统输出（System.out）
log4j.appender.console.target=System.out
#配置了控制台输出的布局，使用 org.apache.log4j.PatternLayout
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#定义了控制台输出的格式，这里使用了时间、日志级别、类名、行号和消息等信息。
#%d是时间占位符，{ABSOLUTE}表示输出绝对时间
#%5p输出的级别占用宽度为5个字符
#%c{1}输出类名，1表示只输出最后一个部分，也就是只输出类名不输出类的路径
#%L表示行
#-是自己定义的分隔符
#%m表示输出日志信息
#%n表示换行符
log4j.appender.console.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

##以上设置了控制台输出格式，示例如下：
#16:34:06,945  INFO RpcServiceScanner:52 - version: 1.0.0



#配置了文件输出器，使用 org.apache.log4j.DailyRollingFileAppender，表示每天滚动生成一个新的日志文件
log4j.appender.file = org.apache.log4j.DailyRollingFileAppender
#指定了日志文件的路径和名称。
log4j.appender.file.File = d:/logs/log.log
#表示在原有日志文件的基础上追加日志内容。
log4j.appender.file.Append = true
#设置了文件输出器的阈值，只记录 ERROR 级别及以上的日志。
log4j.appender.file.Threshold = DEBUG
#配置了文件输出的布局，同样使用 org.apache.log4j.PatternLayout
log4j.appender.file.layout = org.apache.log4j.PatternLayout
#定义了文件输出的格式
#%-d表示左对齐，{yyyy-MM-dd HH:mm:ss}是时间格式
#其他的同上
log4j.appender.file.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} %5p %c{1}:%L - %m%n
#示例：
#2024-01-16 16:52:38  INFO RpcServiceScanner:50 - interfaceClass: io.qrpc.test.scanner.service.DemoService